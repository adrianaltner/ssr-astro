---
import { Image } from 'astro:assets';
import FormattedDate from './FormattedDate.astro';

interface Props {
  title: string;
  pubDate: Date;
  description?: string;
  heroImage?: any;
  category?: string;
  tags?: string[];
  url: string;
}

const { title, pubDate, description, heroImage, category, tags, url } = Astro.props;
---

<li class="post-card">
  <a href={url}>
    {heroImage && (
      <div class="post-image">
        <Image width={180} height={120} src={heroImage} alt={title} />
      </div>
    )}
    <div class="post-content">
      <h2 class="title">{title}</h2>
      <div class="meta">
        <p class="date">
          <FormattedDate date={pubDate} />
        </p>
        {category && <span class="category">{category}</span>}
      </div>
      
      <div class="post-excerpt">
        {description || "Click to read this exciting blog post!"}
      </div>
      
      {tags && tags.length > 0 && (
        <div class="tags">
          {tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </a>
</li>

<style>
  .post-card {
    border-radius: 12px;
    overflow: hidden;
    background: white;
    box-shadow: 0 4px 12px rgba(var(--gray), 15%);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    width: 100%;
  }

  .post-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 24px rgba(var(--gray), 25%);
  }

  .post-card a {
    text-decoration: none;
    display: flex;
    flex-direction: row;
    align-items: stretch;
  }

  .post-image {
    width: 180px;
    height: 120px;
    flex-shrink: 0;
    overflow: hidden;
    position: relative;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: 1rem 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: center;
  }

  .title {
    margin: 0 0 0.4rem 0;
    color: rgb(var(--black));
    line-height: 1.2;
    font-size: 1.1rem;
  }

  .meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .date {
    margin: 0;
    color: rgb(var(--gray));
    font-size: 0.8rem;
  }

  .category {
    font-size: 0.75rem;
    background-color: var(--accent-dark);
    color: white;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    display: inline-block;
  }

  .post-excerpt {
    margin: 0.5rem 0;
    font-size: 0.85rem;
    color: rgb(var(--gray-dark));
    line-height: 1.4;
    flex-grow: 1;
    max-height: 3.7em;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
    margin-top: 0.5rem;
  }

  .tag {
    font-size: 0.7rem;
    background-color: rgba(var(--gray-light), 0.7);
    color: rgb(var(--gray-dark));
    padding: 0.1rem 0.4rem;
    border-radius: 3px;
    white-space: nowrap;
  }

  @media (max-width: 720px) {
    .post-card a {
      flex-direction: row;
    }
    
    .post-image {
      width: 120px;
      height: 100px;
    }
    
    .post-content {
      padding: 0.75rem 1rem;
    }
    
    .post-excerpt {
      -webkit-line-clamp: 2;
    }
    
    .tags {
      display: none; /* Hide tags on medium screens to save space */
    }
  }
  
  /* For very small screens */
  @media (max-width: 480px) {
    .post-card a {
      flex-direction: column;
    }
    
    .post-image {
      width: 100%;
      height: auto;
      aspect-ratio: 16/9;
    }
    
    .tags {
      display: flex; /* Show tags again on very small screens where we have vertical layout */
    }
  }
</style>
